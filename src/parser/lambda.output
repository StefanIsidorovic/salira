Terminals unused in grammar

   DOUBLE_NUM
   LET
   IN
   MAX
   MIN
   NEG
   UMINUS


State 5 conflicts: 4 reduce/reduce
State 6 conflicts: 4 reduce/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: PROGRAM LINE ';'
    2        | LINE ';'

    3 LINE: ID_F ARGS '=' EXP
    4     | COMMENT

    5 ARGS: ARGS ID
    6     | ID
    7     | ARGS INT_NUM
    8     | INT_NUM
    9     | EXP

   10 EXP: EXP '+' EXP
   11    | EXP '-' EXP
   12    | EXP '*' EXP
   13    | EXP '/' EXP
   14    | INT_NUM
   15    | ID_F '(' ARGS ')'
   16    | ID
   17    | '(' EXP ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 17
')' (41) 15 17
'*' (42) 12
'+' (43) 10
'-' (45) 11
'/' (47) 13
';' (59) 1 2
'=' (61) 3
error (256)
INT_NUM (258) 7 8 14
DOUBLE_NUM (259)
ID (260) 5 6 16
COMMENT (261) 4
ID_F (262) 3 15
LET (263)
IN (264)
MAX (265)
MIN (266)
NEG (267)
UMINUS (268)


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
PROGRAM (23)
    on left: 1 2, on right: 0 1
LINE (24)
    on left: 3 4, on right: 1 2
ARGS (25)
    on left: 5 6 7 8 9, on right: 3 5 7 15
EXP (26)
    on left: 10 11 12 13 14 15 16 17, on right: 3 9 10 11 12 13 17


State 0

    0 $accept: . PROGRAM $end

    COMMENT  shift, and go to state 1
    ID_F     shift, and go to state 2

    PROGRAM  go to state 3
    LINE     go to state 4


State 1

    4 LINE: COMMENT .

    $default  reduce using rule 4 (LINE)


State 2

    3 LINE: ID_F . ARGS '=' EXP

    INT_NUM  shift, and go to state 5
    ID       shift, and go to state 6
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    ARGS  go to state 9
    EXP   go to state 10


State 3

    0 $accept: PROGRAM . $end
    1 PROGRAM: PROGRAM . LINE ';'

    $end     shift, and go to state 11
    COMMENT  shift, and go to state 1
    ID_F     shift, and go to state 2

    LINE  go to state 12


State 4

    2 PROGRAM: LINE . ';'

    ';'  shift, and go to state 13


State 5

    8 ARGS: INT_NUM .
   14 EXP: INT_NUM .

    INT_NUM   reduce using rule 8 (ARGS)
    INT_NUM   [reduce using rule 14 (EXP)]
    ID        reduce using rule 8 (ARGS)
    ID        [reduce using rule 14 (EXP)]
    '+'       reduce using rule 14 (EXP)
    '-'       reduce using rule 14 (EXP)
    '*'       reduce using rule 14 (EXP)
    '/'       reduce using rule 14 (EXP)
    ')'       reduce using rule 8 (ARGS)
    ')'       [reduce using rule 14 (EXP)]
    '='       reduce using rule 8 (ARGS)
    '='       [reduce using rule 14 (EXP)]
    $default  reduce using rule 8 (ARGS)


State 6

    6 ARGS: ID .
   16 EXP: ID .

    INT_NUM   reduce using rule 6 (ARGS)
    INT_NUM   [reduce using rule 16 (EXP)]
    ID        reduce using rule 6 (ARGS)
    ID        [reduce using rule 16 (EXP)]
    '+'       reduce using rule 16 (EXP)
    '-'       reduce using rule 16 (EXP)
    '*'       reduce using rule 16 (EXP)
    '/'       reduce using rule 16 (EXP)
    ')'       reduce using rule 6 (ARGS)
    ')'       [reduce using rule 16 (EXP)]
    '='       reduce using rule 6 (ARGS)
    '='       [reduce using rule 16 (EXP)]
    $default  reduce using rule 6 (ARGS)


State 7

   15 EXP: ID_F . '(' ARGS ')'

    '('  shift, and go to state 14


State 8

   17 EXP: '(' . EXP ')'

    INT_NUM  shift, and go to state 15
    ID       shift, and go to state 16
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    EXP  go to state 17


State 9

    3 LINE: ID_F ARGS . '=' EXP
    5 ARGS: ARGS . ID
    7     | ARGS . INT_NUM

    INT_NUM  shift, and go to state 18
    ID       shift, and go to state 19
    '='      shift, and go to state 20


State 10

    9 ARGS: EXP .
   10 EXP: EXP . '+' EXP
   11    | EXP . '-' EXP
   12    | EXP . '*' EXP
   13    | EXP . '/' EXP

    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24

    $default  reduce using rule 9 (ARGS)


State 11

    0 $accept: PROGRAM $end .

    $default  accept


State 12

    1 PROGRAM: PROGRAM LINE . ';'

    ';'  shift, and go to state 25


State 13

    2 PROGRAM: LINE ';' .

    $default  reduce using rule 2 (PROGRAM)


State 14

   15 EXP: ID_F '(' . ARGS ')'

    INT_NUM  shift, and go to state 5
    ID       shift, and go to state 6
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    ARGS  go to state 26
    EXP   go to state 10


State 15

   14 EXP: INT_NUM .

    $default  reduce using rule 14 (EXP)


State 16

   16 EXP: ID .

    $default  reduce using rule 16 (EXP)


State 17

   10 EXP: EXP . '+' EXP
   11    | EXP . '-' EXP
   12    | EXP . '*' EXP
   13    | EXP . '/' EXP
   17    | '(' EXP . ')'

    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    ')'  shift, and go to state 27


State 18

    7 ARGS: ARGS INT_NUM .

    $default  reduce using rule 7 (ARGS)


State 19

    5 ARGS: ARGS ID .

    $default  reduce using rule 5 (ARGS)


State 20

    3 LINE: ID_F ARGS '=' . EXP

    INT_NUM  shift, and go to state 15
    ID       shift, and go to state 16
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    EXP  go to state 28


State 21

   10 EXP: EXP '+' . EXP

    INT_NUM  shift, and go to state 15
    ID       shift, and go to state 16
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    EXP  go to state 29


State 22

   11 EXP: EXP '-' . EXP

    INT_NUM  shift, and go to state 15
    ID       shift, and go to state 16
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    EXP  go to state 30


State 23

   12 EXP: EXP '*' . EXP

    INT_NUM  shift, and go to state 15
    ID       shift, and go to state 16
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    EXP  go to state 31


State 24

   13 EXP: EXP '/' . EXP

    INT_NUM  shift, and go to state 15
    ID       shift, and go to state 16
    ID_F     shift, and go to state 7
    '('      shift, and go to state 8

    EXP  go to state 32


State 25

    1 PROGRAM: PROGRAM LINE ';' .

    $default  reduce using rule 1 (PROGRAM)


State 26

    5 ARGS: ARGS . ID
    7     | ARGS . INT_NUM
   15 EXP: ID_F '(' ARGS . ')'

    INT_NUM  shift, and go to state 18
    ID       shift, and go to state 19
    ')'      shift, and go to state 33


State 27

   17 EXP: '(' EXP ')' .

    $default  reduce using rule 17 (EXP)


State 28

    3 LINE: ID_F ARGS '=' EXP .
   10 EXP: EXP . '+' EXP
   11    | EXP . '-' EXP
   12    | EXP . '*' EXP
   13    | EXP . '/' EXP

    '+'  shift, and go to state 21
    '-'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24

    $default  reduce using rule 3 (LINE)


State 29

   10 EXP: EXP . '+' EXP
   10    | EXP '+' EXP .
   11    | EXP . '-' EXP
   12    | EXP . '*' EXP
   13    | EXP . '/' EXP

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24

    $default  reduce using rule 10 (EXP)


State 30

   10 EXP: EXP . '+' EXP
   11    | EXP . '-' EXP
   11    | EXP '-' EXP .
   12    | EXP . '*' EXP
   13    | EXP . '/' EXP

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24

    $default  reduce using rule 11 (EXP)


State 31

   10 EXP: EXP . '+' EXP
   11    | EXP . '-' EXP
   12    | EXP . '*' EXP
   12    | EXP '*' EXP .
   13    | EXP . '/' EXP

    '/'  shift, and go to state 24

    $default  reduce using rule 12 (EXP)


State 32

   10 EXP: EXP . '+' EXP
   11    | EXP . '-' EXP
   12    | EXP . '*' EXP
   13    | EXP . '/' EXP
   13    | EXP '/' EXP .

    $default  reduce using rule 13 (EXP)


State 33

   15 EXP: ID_F '(' ARGS ')' .

    $default  reduce using rule 15 (EXP)
