Terminals unused in grammar

   COMMENT
   LET
   IN
   MAX
   MIN
   NEG


State 25 conflicts: 4 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: PROGRAM LINE ';'
    2        | LINE ';'

    3 LINE: ID_F ARGS '=' EXP
    4     | ID_F VALS

    5 ARGS: ARGS ARGEXP
    6     | ARGEXP

    7 ARGEXP: ID

    8 VALS: VALS VAL
    9     | VAL

   10 VAL: INT_NUM
   11    | DOUBLE_NUM

   12 EXP: EXP '+' EXP
   13    | EXP '-' EXP
   14    | EXP '*' EXP
   15    | EXP '/' EXP
   16    | INT_NUM
   17    | DOUBLE_NUM
   18    | ID_F ARGS_F
   19    | ID
   20    | '(' EXP ')'

   21 ARGS_F: ARGS_F EXP
   22       | EXP


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20
')' (41) 20
'*' (42) 14
'+' (43) 12
'-' (45) 13
'/' (47) 15
';' (59) 1 2
'=' (61) 3
error (256)
INT_NUM (258) 10 16
DOUBLE_NUM (259) 11 17
ID (260) 7 19
COMMENT (261)
ID_F (262) 3 4 18
LET (263)
IN (264)
MAX (265)
MIN (266)
NEG (267)
"func" (268)
"func2" (269)
"func1" (270)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
PROGRAM (25)
    on left: 1 2, on right: 0 1
LINE (26)
    on left: 3 4, on right: 1 2
ARGS (27)
    on left: 5 6, on right: 3 5
ARGEXP (28)
    on left: 7, on right: 5 6
VALS (29)
    on left: 8 9, on right: 4 8
VAL (30)
    on left: 10 11, on right: 8 9
EXP (31)
    on left: 12 13 14 15 16 17 18 19 20, on right: 3 12 13 14 15 20
    21 22
ARGS_F (32)
    on left: 21 22, on right: 18 21


State 0

    0 $accept: . PROGRAM $end

    ID_F  shift, and go to state 1

    PROGRAM  go to state 2
    LINE     go to state 3


State 1

    3 LINE: ID_F . ARGS '=' EXP
    4     | ID_F . VALS

    INT_NUM     shift, and go to state 4
    DOUBLE_NUM  shift, and go to state 5
    ID          shift, and go to state 6

    ARGS    go to state 7
    ARGEXP  go to state 8
    VALS    go to state 9
    VAL     go to state 10


State 2

    0 $accept: PROGRAM . $end
    1 PROGRAM: PROGRAM . LINE ';'

    $end  shift, and go to state 11
    ID_F  shift, and go to state 1

    LINE  go to state 12


State 3

    2 PROGRAM: LINE . ';'

    ';'  shift, and go to state 13


State 4

   10 VAL: INT_NUM .

    $default  reduce using rule 10 (VAL)


State 5

   11 VAL: DOUBLE_NUM .

    $default  reduce using rule 11 (VAL)


State 6

    7 ARGEXP: ID .

    $default  reduce using rule 7 (ARGEXP)


State 7

    3 LINE: ID_F ARGS . '=' EXP
    5 ARGS: ARGS . ARGEXP

    ID   shift, and go to state 6
    '='  shift, and go to state 14

    ARGEXP  go to state 15


State 8

    6 ARGS: ARGEXP .

    $default  reduce using rule 6 (ARGS)


State 9

    4 LINE: ID_F VALS .
    8 VALS: VALS . VAL

    INT_NUM     shift, and go to state 4
    DOUBLE_NUM  shift, and go to state 5

    $default  reduce using rule 4 (LINE)

    VAL  go to state 16


State 10

    9 VALS: VAL .

    $default  reduce using rule 9 (VALS)


State 11

    0 $accept: PROGRAM $end .

    $default  accept


State 12

    1 PROGRAM: PROGRAM LINE . ';'

    ';'  shift, and go to state 17


State 13

    2 PROGRAM: LINE ';' .

    $default  reduce using rule 2 (PROGRAM)


State 14

    3 LINE: ID_F ARGS '=' . EXP

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21
    '('         shift, and go to state 22

    EXP  go to state 23


State 15

    5 ARGS: ARGS ARGEXP .

    $default  reduce using rule 5 (ARGS)


State 16

    8 VALS: VALS VAL .

    $default  reduce using rule 8 (VALS)


State 17

    1 PROGRAM: PROGRAM LINE ';' .

    $default  reduce using rule 1 (PROGRAM)


State 18

   16 EXP: INT_NUM .

    $default  reduce using rule 16 (EXP)


State 19

   17 EXP: DOUBLE_NUM .

    $default  reduce using rule 17 (EXP)


State 20

   19 EXP: ID .

    $default  reduce using rule 19 (EXP)


State 21

   18 EXP: ID_F . ARGS_F

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21
    '('         shift, and go to state 22

    EXP     go to state 24
    ARGS_F  go to state 25


State 22

   20 EXP: '(' . EXP ')'

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21
    '('         shift, and go to state 22

    EXP  go to state 26


State 23

    3 LINE: ID_F ARGS '=' EXP .
   12 EXP: EXP . '+' EXP
   13    | EXP . '-' EXP
   14    | EXP . '*' EXP
   15    | EXP . '/' EXP

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 3 (LINE)


State 24

   12 EXP: EXP . '+' EXP
   13    | EXP . '-' EXP
   14    | EXP . '*' EXP
   15    | EXP . '/' EXP
   22 ARGS_F: EXP .

    $default  reduce using rule 22 (ARGS_F)


State 25

   18 EXP: ID_F ARGS_F .
   21 ARGS_F: ARGS_F . EXP

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21

    INT_NUM     [reduce using rule 18 (EXP)]
    DOUBLE_NUM  [reduce using rule 18 (EXP)]
    ID          [reduce using rule 18 (EXP)]
    ID_F        [reduce using rule 18 (EXP)]
    $default    reduce using rule 18 (EXP)

    EXP  go to state 31


State 26

   12 EXP: EXP . '+' EXP
   13    | EXP . '-' EXP
   14    | EXP . '*' EXP
   15    | EXP . '/' EXP
   20    | '(' EXP . ')'

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ')'  shift, and go to state 32


State 27

   12 EXP: EXP '+' . EXP

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21
    '('         shift, and go to state 22

    EXP  go to state 33


State 28

   13 EXP: EXP '-' . EXP

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21
    '('         shift, and go to state 22

    EXP  go to state 34


State 29

   14 EXP: EXP '*' . EXP

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21
    '('         shift, and go to state 22

    EXP  go to state 35


State 30

   15 EXP: EXP '/' . EXP

    INT_NUM     shift, and go to state 18
    DOUBLE_NUM  shift, and go to state 19
    ID          shift, and go to state 20
    ID_F        shift, and go to state 21
    '('         shift, and go to state 22

    EXP  go to state 36


State 31

   12 EXP: EXP . '+' EXP
   13    | EXP . '-' EXP
   14    | EXP . '*' EXP
   15    | EXP . '/' EXP
   21 ARGS_F: ARGS_F EXP .

    $default  reduce using rule 21 (ARGS_F)


State 32

   20 EXP: '(' EXP ')' .

    $default  reduce using rule 20 (EXP)


State 33

   12 EXP: EXP . '+' EXP
   12    | EXP '+' EXP .
   13    | EXP . '-' EXP
   14    | EXP . '*' EXP
   15    | EXP . '/' EXP

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 12 (EXP)


State 34

   12 EXP: EXP . '+' EXP
   13    | EXP . '-' EXP
   13    | EXP '-' EXP .
   14    | EXP . '*' EXP
   15    | EXP . '/' EXP

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 13 (EXP)


State 35

   12 EXP: EXP . '+' EXP
   13    | EXP . '-' EXP
   14    | EXP . '*' EXP
   14    | EXP '*' EXP .
   15    | EXP . '/' EXP

    '/'  shift, and go to state 30

    $default  reduce using rule 14 (EXP)


State 36

   12 EXP: EXP . '+' EXP
   13    | EXP . '-' EXP
   14    | EXP . '*' EXP
   15    | EXP . '/' EXP
   15    | EXP '/' EXP .

    $default  reduce using rule 15 (EXP)
