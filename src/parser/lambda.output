Terminals unused in grammar

   COMMENT
   LET
   IN
   MAX
   MIN


State 39 conflicts: 6 shift/reduce


Grammar

    0 $accept: P $end

    1 P: PROGRAM

    2 PROGRAM: PROGRAM LINE ';'
    3        | LINE ';'

    4 LINE: ID_F ARGS '=' EXP
    5     | ID_F VALS

    6 ARGS: ARGS ARGEXP
    7     | ARGEXP

    8 ARGEXP: ID

    9 VALS: VALS VAL
   10     | VAL

   11 VAL: INT_NUM
   12    | DOUBLE_NUM
   13    | '-' INT_NUM
   14    | LIST

   15 EXP: EXP '+' EXP
   16    | EXP '-' EXP
   17    | EXP '*' EXP
   18    | EXP '/' EXP
   19    | INT_NUM
   20    | DOUBLE_NUM
   21    | ID_F ARGS_F
   22    | NEG '(' EXP ')'
   23    | ID
   24    | '(' EXP ')'
   25    | LIST
   26    | INT_NUM ':' EXP
   27    | HEAD '(' EXP ')'

   28 ARGS_F: ARGS_F EXP
   29       | EXP

   30 LIST: '[' LIST_ITEMS ']'

   31 LIST_ITEMS: LIST_ITEMS ',' INT_NUM
   32           | INT_NUM
   33           | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22 24 27
')' (41) 22 24 27
'*' (42) 17
'+' (43) 15
',' (44) 31
'-' (45) 13 16
'/' (47) 18
':' (58) 26
';' (59) 2 3
'=' (61) 4
'[' (91) 30
']' (93) 30
error (256)
INT_NUM (258) 11 13 19 26 31 32
DOUBLE_NUM (259) 12 20
ID (260) 8 23
COMMENT (261)
ID_F (262) 4 5 21
LET (263)
IN (264)
MAX (265)
MIN (266)
NEG (267) 22
HEAD (268) 27
"func" (269)
"func2" (270)
"func1" (271)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
P (30)
    on left: 1, on right: 0
PROGRAM (31)
    on left: 2 3, on right: 1 2
LINE (32)
    on left: 4 5, on right: 2 3
ARGS (33)
    on left: 6 7, on right: 4 6
ARGEXP (34)
    on left: 8, on right: 6 7
VALS (35)
    on left: 9 10, on right: 5 9
VAL (36)
    on left: 11 12 13 14, on right: 9 10
EXP (37)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27, on right: 4 15
    16 17 18 22 24 26 27 28 29
ARGS_F (38)
    on left: 28 29, on right: 21 28
LIST (39)
    on left: 30, on right: 14 25
LIST_ITEMS (40)
    on left: 31 32 33, on right: 30 31


State 0

    0 $accept: . P $end

    ID_F  shift, and go to state 1

    P        go to state 2
    PROGRAM  go to state 3
    LINE     go to state 4


State 1

    4 LINE: ID_F . ARGS '=' EXP
    5     | ID_F . VALS

    INT_NUM     shift, and go to state 5
    DOUBLE_NUM  shift, and go to state 6
    ID          shift, and go to state 7
    '-'         shift, and go to state 8
    '['         shift, and go to state 9

    ARGS    go to state 10
    ARGEXP  go to state 11
    VALS    go to state 12
    VAL     go to state 13
    LIST    go to state 14


State 2

    0 $accept: P . $end

    $end  shift, and go to state 15


State 3

    1 P: PROGRAM .
    2 PROGRAM: PROGRAM . LINE ';'

    ID_F  shift, and go to state 1

    $default  reduce using rule 1 (P)

    LINE  go to state 16


State 4

    3 PROGRAM: LINE . ';'

    ';'  shift, and go to state 17


State 5

   11 VAL: INT_NUM .

    $default  reduce using rule 11 (VAL)


State 6

   12 VAL: DOUBLE_NUM .

    $default  reduce using rule 12 (VAL)


State 7

    8 ARGEXP: ID .

    $default  reduce using rule 8 (ARGEXP)


State 8

   13 VAL: '-' . INT_NUM

    INT_NUM  shift, and go to state 18


State 9

   30 LIST: '[' . LIST_ITEMS ']'

    INT_NUM  shift, and go to state 19

    $default  reduce using rule 33 (LIST_ITEMS)

    LIST_ITEMS  go to state 20


State 10

    4 LINE: ID_F ARGS . '=' EXP
    6 ARGS: ARGS . ARGEXP

    ID   shift, and go to state 7
    '='  shift, and go to state 21

    ARGEXP  go to state 22


State 11

    7 ARGS: ARGEXP .

    $default  reduce using rule 7 (ARGS)


State 12

    5 LINE: ID_F VALS .
    9 VALS: VALS . VAL

    INT_NUM     shift, and go to state 5
    DOUBLE_NUM  shift, and go to state 6
    '-'         shift, and go to state 8
    '['         shift, and go to state 9

    $default  reduce using rule 5 (LINE)

    VAL   go to state 23
    LIST  go to state 14


State 13

   10 VALS: VAL .

    $default  reduce using rule 10 (VALS)


State 14

   14 VAL: LIST .

    $default  reduce using rule 14 (VAL)


State 15

    0 $accept: P $end .

    $default  accept


State 16

    2 PROGRAM: PROGRAM LINE . ';'

    ';'  shift, and go to state 24


State 17

    3 PROGRAM: LINE ';' .

    $default  reduce using rule 3 (PROGRAM)


State 18

   13 VAL: '-' INT_NUM .

    $default  reduce using rule 13 (VAL)


State 19

   32 LIST_ITEMS: INT_NUM .

    $default  reduce using rule 32 (LIST_ITEMS)


State 20

   30 LIST: '[' LIST_ITEMS . ']'
   31 LIST_ITEMS: LIST_ITEMS . ',' INT_NUM

    ']'  shift, and go to state 25
    ','  shift, and go to state 26


State 21

    4 LINE: ID_F ARGS '=' . EXP

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 34
    LIST  go to state 35


State 22

    6 ARGS: ARGS ARGEXP .

    $default  reduce using rule 6 (ARGS)


State 23

    9 VALS: VALS VAL .

    $default  reduce using rule 9 (VALS)


State 24

    2 PROGRAM: PROGRAM LINE ';' .

    $default  reduce using rule 2 (PROGRAM)


State 25

   30 LIST: '[' LIST_ITEMS ']' .

    $default  reduce using rule 30 (LIST)


State 26

   31 LIST_ITEMS: LIST_ITEMS ',' . INT_NUM

    INT_NUM  shift, and go to state 36


State 27

   19 EXP: INT_NUM .
   26    | INT_NUM . ':' EXP

    ':'  shift, and go to state 37

    $default  reduce using rule 19 (EXP)


State 28

   20 EXP: DOUBLE_NUM .

    $default  reduce using rule 20 (EXP)


State 29

   23 EXP: ID .

    $default  reduce using rule 23 (EXP)


State 30

   21 EXP: ID_F . ARGS_F

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP     go to state 38
    ARGS_F  go to state 39
    LIST    go to state 35


State 31

   22 EXP: NEG . '(' EXP ')'

    '('  shift, and go to state 40


State 32

   27 EXP: HEAD . '(' EXP ')'

    '('  shift, and go to state 41


State 33

   24 EXP: '(' . EXP ')'

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 42
    LIST  go to state 35


State 34

    4 LINE: ID_F ARGS '=' EXP .
   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 4 (LINE)


State 35

   25 EXP: LIST .

    $default  reduce using rule 25 (EXP)


State 36

   31 LIST_ITEMS: LIST_ITEMS ',' INT_NUM .

    $default  reduce using rule 31 (LIST_ITEMS)


State 37

   26 EXP: INT_NUM ':' . EXP

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 47
    LIST  go to state 35


State 38

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP
   29 ARGS_F: EXP .

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 29 (ARGS_F)


State 39

   21 EXP: ID_F ARGS_F .
   28 ARGS_F: ARGS_F . EXP

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    INT_NUM     [reduce using rule 21 (EXP)]
    DOUBLE_NUM  [reduce using rule 21 (EXP)]
    ID          [reduce using rule 21 (EXP)]
    ID_F        [reduce using rule 21 (EXP)]
    NEG         [reduce using rule 21 (EXP)]
    HEAD        [reduce using rule 21 (EXP)]
    $default    reduce using rule 21 (EXP)

    EXP   go to state 48
    LIST  go to state 35


State 40

   22 EXP: NEG '(' . EXP ')'

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 49
    LIST  go to state 35


State 41

   27 EXP: HEAD '(' . EXP ')'

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 50
    LIST  go to state 35


State 42

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP
   24    | '(' EXP . ')'

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 51


State 43

   15 EXP: EXP '+' . EXP

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 52
    LIST  go to state 35


State 44

   16 EXP: EXP '-' . EXP

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 53
    LIST  go to state 35


State 45

   17 EXP: EXP '*' . EXP

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 54
    LIST  go to state 35


State 46

   18 EXP: EXP '/' . EXP

    INT_NUM     shift, and go to state 27
    DOUBLE_NUM  shift, and go to state 28
    ID          shift, and go to state 29
    ID_F        shift, and go to state 30
    NEG         shift, and go to state 31
    HEAD        shift, and go to state 32
    '('         shift, and go to state 33
    '['         shift, and go to state 9

    EXP   go to state 55
    LIST  go to state 35


State 47

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP
   26    | INT_NUM ':' EXP .

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 26 (EXP)


State 48

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP
   28 ARGS_F: ARGS_F EXP .

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 28 (ARGS_F)


State 49

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP
   22    | NEG '(' EXP . ')'

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 56


State 50

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP
   27    | HEAD '(' EXP . ')'

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 57


State 51

   24 EXP: '(' EXP ')' .

    $default  reduce using rule 24 (EXP)


State 52

   15 EXP: EXP . '+' EXP
   15    | EXP '+' EXP .
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 15 (EXP)


State 53

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   16    | EXP '-' EXP .
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 16 (EXP)


State 54

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   17    | EXP '*' EXP .
   18    | EXP . '/' EXP

    '/'  shift, and go to state 46

    $default  reduce using rule 17 (EXP)


State 55

   15 EXP: EXP . '+' EXP
   16    | EXP . '-' EXP
   17    | EXP . '*' EXP
   18    | EXP . '/' EXP
   18    | EXP '/' EXP .

    $default  reduce using rule 18 (EXP)


State 56

   22 EXP: NEG '(' EXP ')' .

    $default  reduce using rule 22 (EXP)


State 57

   27 EXP: HEAD '(' EXP ')' .

    $default  reduce using rule 27 (EXP)
