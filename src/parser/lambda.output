Nonterminals useless in grammar

   VAL
   VALS


Terminals unused in grammar

   COMMENT
   LET
   IN
   MAX
   MIN
   NEG


State 20 conflicts: 4 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: PROGRAM LINE ';'
    2        | LINE ';'

    3 LINE: ID_F ARGS '=' EXP

    4 ARGS: ARGS ARGEXP
    5     | ARGEXP

    6 ARGEXP: ID

    7 EXP: EXP '+' EXP
    8    | EXP '-' EXP
    9    | EXP '*' EXP
   10    | EXP '/' EXP
   11    | INT_NUM
   12    | DOUBLE_NUM
   13    | ID_F ARGS_F
   14    | ID
   15    | '(' EXP ')'

   16 ARGS_F: ARGS_F EXP
   17       | EXP


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15
')' (41) 15
'*' (42) 9
'+' (43) 7
'-' (45) 8
'/' (47) 10
';' (59) 1 2
'=' (61) 3
error (256)
INT_NUM (258) 11
DOUBLE_NUM (259) 12
ID (260) 6 14
COMMENT (261)
ID_F (262) 3 13
LET (263)
IN (264)
MAX (265)
MIN (266)
NEG (267)
"func" (268)
"func2" (269)
"func1" (270)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
PROGRAM (25)
    on left: 1 2, on right: 0 1
LINE (26)
    on left: 3, on right: 1 2
ARGS (27)
    on left: 4 5, on right: 3 4
ARGEXP (28)
    on left: 6, on right: 4 5
EXP (29)
    on left: 7 8 9 10 11 12 13 14 15, on right: 3 7 8 9 10 15 16 17
ARGS_F (30)
    on left: 16 17, on right: 13 16


State 0

    0 $accept: . PROGRAM $end

    ID_F  shift, and go to state 1

    PROGRAM  go to state 2
    LINE     go to state 3


State 1

    3 LINE: ID_F . ARGS '=' EXP

    ID  shift, and go to state 4

    ARGS    go to state 5
    ARGEXP  go to state 6


State 2

    0 $accept: PROGRAM . $end
    1 PROGRAM: PROGRAM . LINE ';'

    $end  shift, and go to state 7
    ID_F  shift, and go to state 1

    LINE  go to state 8


State 3

    2 PROGRAM: LINE . ';'

    ';'  shift, and go to state 9


State 4

    6 ARGEXP: ID .

    $default  reduce using rule 6 (ARGEXP)


State 5

    3 LINE: ID_F ARGS . '=' EXP
    4 ARGS: ARGS . ARGEXP

    ID   shift, and go to state 4
    '='  shift, and go to state 10

    ARGEXP  go to state 11


State 6

    5 ARGS: ARGEXP .

    $default  reduce using rule 5 (ARGS)


State 7

    0 $accept: PROGRAM $end .

    $default  accept


State 8

    1 PROGRAM: PROGRAM LINE . ';'

    ';'  shift, and go to state 12


State 9

    2 PROGRAM: LINE ';' .

    $default  reduce using rule 2 (PROGRAM)


State 10

    3 LINE: ID_F ARGS '=' . EXP

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16
    '('         shift, and go to state 17

    EXP  go to state 18


State 11

    4 ARGS: ARGS ARGEXP .

    $default  reduce using rule 4 (ARGS)


State 12

    1 PROGRAM: PROGRAM LINE ';' .

    $default  reduce using rule 1 (PROGRAM)


State 13

   11 EXP: INT_NUM .

    $default  reduce using rule 11 (EXP)


State 14

   12 EXP: DOUBLE_NUM .

    $default  reduce using rule 12 (EXP)


State 15

   14 EXP: ID .

    $default  reduce using rule 14 (EXP)


State 16

   13 EXP: ID_F . ARGS_F

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16
    '('         shift, and go to state 17

    EXP     go to state 19
    ARGS_F  go to state 20


State 17

   15 EXP: '(' . EXP ')'

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16
    '('         shift, and go to state 17

    EXP  go to state 21


State 18

    3 LINE: ID_F ARGS '=' EXP .
    7 EXP: EXP . '+' EXP
    8    | EXP . '-' EXP
    9    | EXP . '*' EXP
   10    | EXP . '/' EXP

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    '*'  shift, and go to state 24
    '/'  shift, and go to state 25

    $default  reduce using rule 3 (LINE)


State 19

    7 EXP: EXP . '+' EXP
    8    | EXP . '-' EXP
    9    | EXP . '*' EXP
   10    | EXP . '/' EXP
   17 ARGS_F: EXP .

    $default  reduce using rule 17 (ARGS_F)


State 20

   13 EXP: ID_F ARGS_F .
   16 ARGS_F: ARGS_F . EXP

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16

    INT_NUM     [reduce using rule 13 (EXP)]
    DOUBLE_NUM  [reduce using rule 13 (EXP)]
    ID          [reduce using rule 13 (EXP)]
    ID_F        [reduce using rule 13 (EXP)]
    $default    reduce using rule 13 (EXP)

    EXP  go to state 26


State 21

    7 EXP: EXP . '+' EXP
    8    | EXP . '-' EXP
    9    | EXP . '*' EXP
   10    | EXP . '/' EXP
   15    | '(' EXP . ')'

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    '*'  shift, and go to state 24
    '/'  shift, and go to state 25
    ')'  shift, and go to state 27


State 22

    7 EXP: EXP '+' . EXP

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16
    '('         shift, and go to state 17

    EXP  go to state 28


State 23

    8 EXP: EXP '-' . EXP

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16
    '('         shift, and go to state 17

    EXP  go to state 29


State 24

    9 EXP: EXP '*' . EXP

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16
    '('         shift, and go to state 17

    EXP  go to state 30


State 25

   10 EXP: EXP '/' . EXP

    INT_NUM     shift, and go to state 13
    DOUBLE_NUM  shift, and go to state 14
    ID          shift, and go to state 15
    ID_F        shift, and go to state 16
    '('         shift, and go to state 17

    EXP  go to state 31


State 26

    7 EXP: EXP . '+' EXP
    8    | EXP . '-' EXP
    9    | EXP . '*' EXP
   10    | EXP . '/' EXP
   16 ARGS_F: ARGS_F EXP .

    $default  reduce using rule 16 (ARGS_F)


State 27

   15 EXP: '(' EXP ')' .

    $default  reduce using rule 15 (EXP)


State 28

    7 EXP: EXP . '+' EXP
    7    | EXP '+' EXP .
    8    | EXP . '-' EXP
    9    | EXP . '*' EXP
   10    | EXP . '/' EXP

    '*'  shift, and go to state 24
    '/'  shift, and go to state 25

    $default  reduce using rule 7 (EXP)


State 29

    7 EXP: EXP . '+' EXP
    8    | EXP . '-' EXP
    8    | EXP '-' EXP .
    9    | EXP . '*' EXP
   10    | EXP . '/' EXP

    '*'  shift, and go to state 24
    '/'  shift, and go to state 25

    $default  reduce using rule 8 (EXP)


State 30

    7 EXP: EXP . '+' EXP
    8    | EXP . '-' EXP
    9    | EXP . '*' EXP
    9    | EXP '*' EXP .
   10    | EXP . '/' EXP

    '/'  shift, and go to state 25

    $default  reduce using rule 9 (EXP)


State 31

    7 EXP: EXP . '+' EXP
    8    | EXP . '-' EXP
    9    | EXP . '*' EXP
   10    | EXP . '/' EXP
   10    | EXP '/' EXP .

    $default  reduce using rule 10 (EXP)
