Terminals unused in grammar

   COMMENT
   LET
   IN
   MAX
   MIN


State 27 conflicts: 5 shift/reduce


Grammar

    0 $accept: P $end

    1 P: PROGRAM

    2 PROGRAM: PROGRAM LINE ';'
    3        | LINE ';'

    4 LINE: ID_F ARGS '=' EXP
    5     | ID_F VALS

    6 ARGS: ARGS ARGEXP
    7     | ARGEXP

    8 ARGEXP: ID

    9 VALS: VALS VAL
   10     | VAL

   11 VAL: INT_NUM
   12    | DOUBLE_NUM

   13 EXP: EXP '+' EXP
   14    | EXP '-' EXP
   15    | EXP '*' EXP
   16    | EXP '/' EXP
   17    | INT_NUM
   18    | DOUBLE_NUM
   19    | ID_F ARGS_F
   20    | NEG '(' EXP ')'
   21    | ID
   22    | '(' EXP ')'

   23 ARGS_F: ARGS_F EXP
   24       | EXP


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20 22
')' (41) 20 22
'*' (42) 15
'+' (43) 13
'-' (45) 14
'/' (47) 16
';' (59) 2 3
'=' (61) 4
error (256)
INT_NUM (258) 11 17
DOUBLE_NUM (259) 12 18
ID (260) 8 21
COMMENT (261)
ID_F (262) 4 5 19
LET (263)
IN (264)
MAX (265)
MIN (266)
NEG (267) 20
"func" (268)
"func2" (269)
"func1" (270)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
P (25)
    on left: 1, on right: 0
PROGRAM (26)
    on left: 2 3, on right: 1 2
LINE (27)
    on left: 4 5, on right: 2 3
ARGS (28)
    on left: 6 7, on right: 4 6
ARGEXP (29)
    on left: 8, on right: 6 7
VALS (30)
    on left: 9 10, on right: 5 9
VAL (31)
    on left: 11 12, on right: 9 10
EXP (32)
    on left: 13 14 15 16 17 18 19 20 21 22, on right: 4 13 14 15 16
    20 22 23 24
ARGS_F (33)
    on left: 23 24, on right: 19 23


State 0

    0 $accept: . P $end

    ID_F  shift, and go to state 1

    P        go to state 2
    PROGRAM  go to state 3
    LINE     go to state 4


State 1

    4 LINE: ID_F . ARGS '=' EXP
    5     | ID_F . VALS

    INT_NUM     shift, and go to state 5
    DOUBLE_NUM  shift, and go to state 6
    ID          shift, and go to state 7

    ARGS    go to state 8
    ARGEXP  go to state 9
    VALS    go to state 10
    VAL     go to state 11


State 2

    0 $accept: P . $end

    $end  shift, and go to state 12


State 3

    1 P: PROGRAM .
    2 PROGRAM: PROGRAM . LINE ';'

    ID_F  shift, and go to state 1

    $default  reduce using rule 1 (P)

    LINE  go to state 13


State 4

    3 PROGRAM: LINE . ';'

    ';'  shift, and go to state 14


State 5

   11 VAL: INT_NUM .

    $default  reduce using rule 11 (VAL)


State 6

   12 VAL: DOUBLE_NUM .

    $default  reduce using rule 12 (VAL)


State 7

    8 ARGEXP: ID .

    $default  reduce using rule 8 (ARGEXP)


State 8

    4 LINE: ID_F ARGS . '=' EXP
    6 ARGS: ARGS . ARGEXP

    ID   shift, and go to state 7
    '='  shift, and go to state 15

    ARGEXP  go to state 16


State 9

    7 ARGS: ARGEXP .

    $default  reduce using rule 7 (ARGS)


State 10

    5 LINE: ID_F VALS .
    9 VALS: VALS . VAL

    INT_NUM     shift, and go to state 5
    DOUBLE_NUM  shift, and go to state 6

    $default  reduce using rule 5 (LINE)

    VAL  go to state 17


State 11

   10 VALS: VAL .

    $default  reduce using rule 10 (VALS)


State 12

    0 $accept: P $end .

    $default  accept


State 13

    2 PROGRAM: PROGRAM LINE . ';'

    ';'  shift, and go to state 18


State 14

    3 PROGRAM: LINE ';' .

    $default  reduce using rule 3 (PROGRAM)


State 15

    4 LINE: ID_F ARGS '=' . EXP

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP  go to state 25


State 16

    6 ARGS: ARGS ARGEXP .

    $default  reduce using rule 6 (ARGS)


State 17

    9 VALS: VALS VAL .

    $default  reduce using rule 9 (VALS)


State 18

    2 PROGRAM: PROGRAM LINE ';' .

    $default  reduce using rule 2 (PROGRAM)


State 19

   17 EXP: INT_NUM .

    $default  reduce using rule 17 (EXP)


State 20

   18 EXP: DOUBLE_NUM .

    $default  reduce using rule 18 (EXP)


State 21

   21 EXP: ID .

    $default  reduce using rule 21 (EXP)


State 22

   19 EXP: ID_F . ARGS_F

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP     go to state 26
    ARGS_F  go to state 27


State 23

   20 EXP: NEG . '(' EXP ')'

    '('  shift, and go to state 28


State 24

   22 EXP: '(' . EXP ')'

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP  go to state 29


State 25

    4 LINE: ID_F ARGS '=' EXP .
   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 4 (LINE)


State 26

   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP
   24 ARGS_F: EXP .

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 24 (ARGS_F)


State 27

   19 EXP: ID_F ARGS_F .
   23 ARGS_F: ARGS_F . EXP

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    INT_NUM     [reduce using rule 19 (EXP)]
    DOUBLE_NUM  [reduce using rule 19 (EXP)]
    ID          [reduce using rule 19 (EXP)]
    ID_F        [reduce using rule 19 (EXP)]
    NEG         [reduce using rule 19 (EXP)]
    $default    reduce using rule 19 (EXP)

    EXP  go to state 34


State 28

   20 EXP: NEG '(' . EXP ')'

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP  go to state 35


State 29

   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP
   22    | '(' EXP . ')'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    ')'  shift, and go to state 36


State 30

   13 EXP: EXP '+' . EXP

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP  go to state 37


State 31

   14 EXP: EXP '-' . EXP

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP  go to state 38


State 32

   15 EXP: EXP '*' . EXP

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP  go to state 39


State 33

   16 EXP: EXP '/' . EXP

    INT_NUM     shift, and go to state 19
    DOUBLE_NUM  shift, and go to state 20
    ID          shift, and go to state 21
    ID_F        shift, and go to state 22
    NEG         shift, and go to state 23
    '('         shift, and go to state 24

    EXP  go to state 40


State 34

   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP
   23 ARGS_F: ARGS_F EXP .

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 23 (ARGS_F)


State 35

   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP
   20    | NEG '(' EXP . ')'

    '+'  shift, and go to state 30
    '-'  shift, and go to state 31
    '*'  shift, and go to state 32
    '/'  shift, and go to state 33
    ')'  shift, and go to state 41


State 36

   22 EXP: '(' EXP ')' .

    $default  reduce using rule 22 (EXP)


State 37

   13 EXP: EXP . '+' EXP
   13    | EXP '+' EXP .
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 13 (EXP)


State 38

   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   14    | EXP '-' EXP .
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP

    '*'  shift, and go to state 32
    '/'  shift, and go to state 33

    $default  reduce using rule 14 (EXP)


State 39

   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   15    | EXP '*' EXP .
   16    | EXP . '/' EXP

    '/'  shift, and go to state 33

    $default  reduce using rule 15 (EXP)


State 40

   13 EXP: EXP . '+' EXP
   14    | EXP . '-' EXP
   15    | EXP . '*' EXP
   16    | EXP . '/' EXP
   16    | EXP '/' EXP .

    $default  reduce using rule 16 (EXP)


State 41

   20 EXP: NEG '(' EXP ')' .

    $default  reduce using rule 20 (EXP)
